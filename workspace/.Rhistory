stats = read.csv("../logs/stats.csv", sep='\t')
stats = data.table(stats)
stats[,time:=as.POSIXct(time, origin='1970-01-01')]
dates = as.numeric(unique(stats$time))
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
library(ggplot2)
library(data.table)
stats = data.table(stats)
stats[,time:=as.POSIXct(time, origin='1970-01-01')]
dates = as.numeric(unique(stats$time))
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
p <- qplot(wt, mpg, data = mtcars)
# Fixed slopes and intercepts
p + geom_abline()
p+geom_abline(intercept=20)
p+geom_abline(intercept=20, slope=-5)
p+geom_abline(intercept=20, slope=5)
p+xlim(0, 40)+geom_abline(intercept=20, slope=5)
p+ylim(0, 40)+geom_abline(intercept=20, slope=5)
p+ylim(0, 40)+xlim(10,20)+geom_abline(intercept=20, slope=5)
p+ylim(0, 40)+xlim(10,20)+geom_abline(intercept=-20, slope=5)
p+ylim(0, 40)+xlim(10,20)+geom_abline(intercept=-10*2, slope=5)
p+ylim(0, 40)+xlim(10,20)+geom_abline(intercept=10*-5, slope=5)
p+ylim(0, 40)+xlim(10,20)+geom_abline(intercept=10*-5, slope=5)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
dates
date()
date()
date("Nov 10 2013")
as.numeric(date())
as.numeric(as.POSIXct.date())
as.numeric(as.POSIXct.date(date()))
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=1384259520*-1, slope=1) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=1384259520*-0.1, slope=0.1) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=1384259520*-0.01, slope=0.01) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
startdate = dates[1]
wpd = 150 # Words per day Approx 10k words in 2 months
wps = wpd / (24*60*60) # Words per second, for slope
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=startdate*-wps, slope=wps) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=startdate*-wps, slope=wps) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom") + ylim(0, 1200)
dates[-1]
tail(dates, 1)
currentdate = tail(dates, 1)
goal = wps * currentdate - startdate # Today's goal
gol
goal
sort(goal)
sort(dates)
currentdate - startdate # Today's goal
wp
wps
wps * 838853
goal = (wps * currentdate) - startdate # Today's goal
goal
wps * currentdate
goal = (wps * currentdate) - (wps * startdate) # Today's goal
goal
goal_line = geom_abline(intercept=intercept, slope=wps)
intercept = (wps * startdate)
goal = (wps * currentdate) - intercept # Today's goal
goal_line = geom_abline(intercept=intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
#ggsave("progress.png")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=intercept, slope=wps) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
#ggsave("progress.png")
intercept
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=startdate*-wps, slope=wps) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom") + ylim(0, 1200)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + geom_abline(intercept=-intercept, slope=wps) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
#ggsave("progress.png")
goal_line = geom_abline(intercept=-intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
wpd = (1387929600- startdate)/10000 # Words per day Approx 10k words in 2 months
wpd
wpd = (1387929600- startdate)/7000 # 7k words by Christmas
wps = wpd / (24*60*60) # Words per second, for slope
intercept = (wps * startdate)
goal = (wps * currentdate) - intercept # Today's goal
goal_line = geom_abline(intercept=-intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
#ggsave("progress.png")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal)
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
#ggsave("progress.png")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
wpd = (1387929600- startdate)/5000 # 5k words by Christmas
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) + xlim(0, 1387929600)
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) + xlim(0, 1387929600) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
?scale_x_datetime
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() + xlim(0, 1387929600)+
theme_minimal()+ theme(legend.position="bottom")
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
wpd
wpd = 10000/(1387929600- startdate) # 5k words by Christmas
wps = wpd / (24*60*60) # Words per second, for slope
intercept = (wps * startdate)
goal = (wps * currentdate) - intercept # Today's goal
goal_line = geom_abline(intercept=-intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
wpd
wps = 10000/(1387929600- startdate) # Words per second, for slope
wps
intercept = (wps * startdate)
goal = (wps * currentdate) - intercept # Today's goal
goal_line = geom_abline(intercept=-intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
wps = 8000/(1387929600- startdate) # Words per second, for slope
intercept = (wps * startdate)
goal = (wps * currentdate) - intercept # Today's goal
goal_line = geom_abline(intercept=-intercept, slope=wps)
ggplot(stats[name!='total'], aes(x=time, y=count, color=name)) +
geom_line() + goal_line + ylim(0, goal) +
# Add thicker "TOTAL" line
geom_line(data=stats[name=='total'], size=3) +
# Add date vertical lines
geom_vline(xintercept=dates, linetype='dotted') +
scale_x_datetime() +
theme_minimal()+ theme(legend.position="bottom")
sprintf("Words per day goal is %s", wps*24*60*60)
sprintf("Words per day goal is %s", round(wps*24*60*60))
